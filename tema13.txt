1ºACTIVIDAD PROPUESTA


1ºCASO PRACTICO 

CREATE OR REPLACE TRIGGER t_ges_emplead
INSTEAD OF DELETE OR INSERT OR UPDATE
ON emplead
FOR EACH ROW
DECLARE
v_dept depart.dept_no%TYPE;
BEGIN
IF DELETING THEN 
DELETE FROM EMPLE WHERE emp_no = :old.emp_no;
ELSIF INSERTING THEN 
SELECT dept_no INTO v_dept FROM depart 
WHERE depart.dnombre = :new.dnombre 
AND loc = :new.loc;
INSERT INTO EMPLE (emp_no, apellido, oficio, dept_no)
VALUES (:new.emp_no, :new.apellido, :new.oficio, v_dept);
ELSIF UPDATING('dnombre') THEN 
SELECT dept_no INTO v_dept FROM depart 
WHERE dnombre = :new.dnombre;
UPDATE emple SET dept_no = v_dept 
WHERE emp_no = :old.emp_no;
ELSIF UPDATING('oficio') THEN 
UPDATE emple SET oficio = :new.oficio 
WHERE emp_no = :old.emp_no;
ELSE 
RAISE_APPLICATION_ERROR(-20500,'Error en la actualización'); 
END IF;
END;
/

2º CASO PRACTICO


CREATE OR REPLACE TRIGGER ctrl_conexiones 
AFTER LOGON 
ON DATABASE
BEGIN
INSERT INTO control_conexiones (usuario, momento, evento)
VALUES (ORA_LOGIN_USER, SYSTIMESTAMP, ORA_SYSEVENT);
END;
/

CREATE OR REPLACE TRIGGER ctrl_eventos 
AFTER DDL 
ON DATABASE
BEGIN
INSERT INTO control_eventos (usuario, momento, evento)
VALUES (USER, SYSTIMESTAMP, ORA_SYSEVENT || '*' ||ORA_DICT_OBJ_NAME);
END;

EJERCICIOS

EJERCICIO 1

CREATE TABLE auditaremple (
col1 VARCHAR2(200)
);
CREATE OR REPLACE TRIGGER auditar_act_emp
BEFORE INSERT OR DELETE
ON EMPLE
FOR EACH ROW
BEGIN
IF DELETING THEN
INSERT INTO AUDITAREMPLE
VALUES(TO_CHAR(sysdate,'DD/MM/YY*HH24:MI*')
|| :OLD.EMP_NO|| '*' || :OLD.APELLIDO || '* BORRADO ');
ELSIF INSERTING THEN
INSERT INTO AUDITAREMPLE
VALUES(TO_CHAR(sysdate,'DD/MM/YY*HH24:MI*')
|| :NEW.EMP_NO || '*' || :NEW.APELLIDO||'* INSERCION ');
END IF;
END;


EJERCICIO2
CREATE OR REPLACE TRIGGER audit_modif
BEFORE UPDATE ON EMPLE
FOR EACH ROW
DECLARE
v_cad_inser auditaremple.col1%TYPE;
BEGIN
v_cad_inser := TO_CHAR(sysdate,'DD/MM/YY*HH24:MI*') ||:OLD.EMP_NO ||'*
MODIFICACION *';
IF UPDATING ('EMP_NO') THEN
v_cad_inser := v_cad_inser
||:OLD.EMP_NO|| '*'|| :NEW.EMP_NO;
END IF;
IF UPDATING ('APELLIDO') THEN
v_cad_inser := v_cad_inser
||:OLD.APELLIDO|| '*'||:NEW.APELLIDO;
END IF;
IF UPDATING ('OFICIO') THEN
v_cad_inser := v_cad_inser
||:OLD.OFICIO|| '*'||:NEW.OFICIO;
END IF;
IF UPDATING ('DIR') THEN
v_cad_inser := v_cad_inser
||:OLD.DIR|| '*'||:NEW.DIR;
END IF;
IF UPDATING ('FECHA_ALT') THEN
v_cad_inser := v_cad_inser
||:OLD.FECHA_ALT||:NEW.FECHA_ALT;
END IF;
IF UPDATING ('SALARIO') THEN
v_cad_inser := v_cad_inser
||:OLD.SALARIO|| '*'||:NEW.SALARIO;
END IF;
IF UPDATING ('COMISION') THEN
v_cad_inser := v_cad_inser
||:OLD.COMISION|| '*'||:NEW.COMISION;
END IF;
IF UPDATING ('DEPT_NO') THEN
v_cad_inser := v_cad_inser
||:OLD.DEPT_NO|| '*'||:NEW.DEPT_NO;
END IF;
INSERT INTO AUDITAREMPLE VALUES(v_cad_inser);
END;


EJERCICIO 3

CREATE OR REPLACE TRIGGER ges_depart
INSTEAD OF DELETE OR INSERT OR UPDATE
ON DEPARTAM
FOR EACH ROW
BEGIN
IF DELETING THEN
DELETE FROM depart WHERE dept_no = :old.dept_no;
ELSIF INSERTING THEN
INSERT INTO depart
VALUES(:new.dept_no, :new.dnombre, :new.loc);
ELSIF UPDATING('loc') THEN
UPDATE depart SET loc = :new.loc
WHERE dept_no = :old.dept_no;
ELSE
RAISE_APPLICATION_ERROR
(-20001,'Error en la actualización');
END IF;
END; 


EJERCICIOS DE LA HOJA

EJERCICIO 1
CREATE TABLE AUTORES(
ID NUMBER(4),
NOMBRE VARCHAR2(50),
APELLIDOS VARCHAR2(50),
CONSTRAINT PK_AUTORES PRIMARY KEY (ID)
);

CREATE TABLE LIBROS(
ISBN VARCHAR2(10),
GENERO VARCHAR2(20),
TITULO VARCHAR2(100),
PAGINAS NUMBER(4),
PRECIO NUMBER(5,2),
COPYRIGHT NUMBER(4),
AUTOR1 NUMBER(6),
AUTOR2 NUMBER(6),
AUTOR3 NUMBER(6),
CONSTRAINT PK_LIBROS PRIMARY KEY (ISBN),
CONSTRAINT FK_LIBROS_AUTORES FOREIGN KEY (ID) REFERENCES AUTORES,
CONSTRAINT FK_LIBROS_AUTORES2 FOREIGN KEY (ID) REFERENCES AUTORES,
CONSTRAINT FK_LIBROS_AUTORES3 FOREIGN KEY (ID) REFERENCES AUTORES,
);

CREATE TABLE ESTADISTICAS(
GENERO VARCHAR2(20),
TOTAL_LIBROS NUMBER(7),
PRECIO_MEDIO NUMBER(5)
);

EJERCICIO2

EL PRIMER TIGGER  se activará después de realizar un insert, un update o un delete en la tabla LIBROS.
al ejecutarse borra los registros de la tabla "ESTADISTICAS" calcula y agrega
nuevos registros a esta usando un cursor que 
agrupa los registros por género y calcula el número total de libros y la media de lo que cuestan por género.

EL SEGUNDO trigger se activará cada vez que se realice un insert, delete o update en la tabla libros.
Actualiza las estadísticas de los libros mediante un FOR...LOOP que recorre calculando la cantidad total de libros y la media del precio. 
Cuando acaba el recorrido, borra los registros de la tabla estadisticas e inserta los que estan actualizados.


EJERCICIO 3
A)
SELECT * FROM AUTORES;
SELECT * FROM LIBROS;
SELECT * FROM ESTADISTICAS;

B)
INSERT INTO AUTORES VALUES (1, 'MARLENE', 'THIERAULT');
INSERT INTO AUTORES VALUES (2, 'BRYANT', 'MYERS');
INSERT INTO AUTORES VALUES (3, 'ANUEL', 'AA');
INSERT INTO AUTORES VALUES (4, 'BAD', 'BUNNY');
INSERT INTO AUTORES VALUES (5, 'POP', 'SMOKE');
INSERT INTO AUTORES VALUES (6, 'TRAVIS', 'SCOTT');
INSERT INTO AUTORES VALUES (7, 'LIL', 'TJAY');
INSERT INTO AUTORES VALUES (8, 'XXX', 'TENTATION');
INSERT INTO AUTORES VALUES (9, 'MARSHALL', 'MATTERS III');
INSERT INTO AUTORES VALUES (10, 'KENDRIK ', 'LAMAR');
INSERT INTO AUTORES VALUES (11, 'J', 'COLE');
INSERT INTO AUTORES VALUES (12, 'JAYSON', 'TATUM');
INSERT INTO AUTORES VALUES (13, 'KANYE', 'WEST');
INSERT INTO AUTORES VALUES (14, 'LEWIS', 'HAMILTON');
INSERT INTO AUTORES VALUES (15, 'FERNANDO', 'ALONSO');
INSERT INTO AUTORES VALUES (16, 'JUICE', 'WRLD');


INSERT INTO LIBROS VALUES (72122048, 'ORACLE BASICS', 'ORACLE: A BEGINNERS GUIDE', 765, 44.99, 1999, 4, 5);
INSERT INTO LIBROS VALUES (72122040, 'ORACLE ADVANCE', 'ORACLE: A BEGINNERS', 765, 44.99, 1999, 6, 7, 8);
INSERT INTO LIBROS VALUES (72122041, 'ORACLE AD', 'ORACLE: A B', 765, 44.99, 1999, 4, 5, 9);
INSERT INTO LIBROS VALUES (72122042, 'ORACLE ADV', 'ORACLE: A BE', 765, 44.99, 1999, 10, 11);
INSERT INTO LIBROS VALUES (72122043, 'ORACLE ADVA', 'ORACLE: A BEG', 765, 44.99, 1999, 18, 19, 20);
INSERT INTO LIBROS VALUES (72122044, 'ORACLE ADVAN', 'ORACLE: A BEGI', 765, 44.99, 1999, 15, 16, 17);
INSERT INTO LIBROS VALUES (72122045, 'ORACLE ADVANC', 'ORACLE: A BEGIN', 765, 44.99, 1999, 4, 8, 15);
